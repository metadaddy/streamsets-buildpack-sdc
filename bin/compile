#!/bin/bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# Fail fast
set -e

indent() {
  sed -u 's/^/       /'
}

BP_DIR=$(cd $(dirname $0)/..; pwd) # absolute path
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

source /dev/stdin <<< "$(curl -s --retry 3 -L https://lang-common.s3.amazonaws.com/buildpack-stdlib/v4/stdlib.sh)"

export_env $ENV_DIR "." "JAVA_OPTS|JAVA_TOOL_OPTIONS"

echo "-----> Downloading and extracting JVM"
# download the buildpack
JVM_COMMON_BUILDPACK=${JVM_COMMON_BUILDPACK:-https://codon-buildpacks.s3.amazonaws.com/buildpacks/heroku/jvm-common.tgz}
mkdir -p /tmp/jvm-common
curl --silent --location $JVM_COMMON_BUILDPACK | tar xzm -C /tmp/jvm-common --strip-components=1
. /tmp/jvm-common/bin/util
. /tmp/jvm-common/bin/java

# install JDK
javaVersion=$(detect_java_version ${BUILD_DIR})
install_java ${BUILD_DIR} ${javaVersion}

echo "-----> Downloading jq"
VENDOR_BIN=${BUILD_DIR}/vendor/bin
mkdir -p ${VENDOR_BIN}
curl -s --retry 3 -L https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 -o ${VENDOR_BIN}/jq
chmod +x ${VENDOR_BIN}/jq

echo "-----> Writing profile script"
PROFILE_SCRIPT=${BUILD_DIR}/.profile.d/sdc.sh

echo '#!/usr/bin/env bash' > ${PROFILE_SCRIPT}
echo >> ${PROFILE_SCRIPT}
echo 'PATH=${HOME}/vendor/bin:${PATH}' >> ${PROFILE_SCRIPT}

# Check for snapshot version - need to get it from nightly archive
if [[ ${SDC_VERSION} == *-SNAPSHOT ]]; then
    SDC_ARCHIVE=http://nightly.streamsets.com.s3-us-west-2.amazonaws.com/datacollector/latest/tarball
elif [[ ${SDC_VERSION} == *-RC* ]]; then
    SDC_ARCHIVE=http://nightly.streamsets.com.s3-us-west-2.amazonaws.com/datacollector/${SDC_VERSION:0:3}/${SDC_VERSION}/tarball
    SDC_VERSION=${SDC_VERSION:0:7}
else
	SDC_ARCHIVE=http://archives.streamsets.com/datacollector/${SDC_VERSION}/tarball
fi

# Install SDC, AWS, JDBC stage libs
echo "-----> Downloading and extracting StreamSets Data Collector ${SDC_VERSION}"
curl -s --retry 3 -L ${SDC_ARCHIVE}/streamsets-datacollector-core-${SDC_VERSION}.tgz | tar xz -C ${BUILD_DIR}
echo "-----> Downloading and extracting StreamSets Data Collector AWS Stage Library ${SDC_VERSION}"
curl -s --retry 3 -L ${SDC_ARCHIVE}/streamsets-datacollector-aws-lib-${SDC_VERSION}.tgz | tar xz -C ${BUILD_DIR}
echo "-----> Downloading and extracting StreamSets Data Collector JDBC Stage Library CUSTOM-VERSION"
#curl -s --retry 3 -L ${SDC_ARCHIVE}/streamsets-datacollector-jdbc-lib-${SDC_VERSION}.tgz | tar xz -C ${BUILD_DIR}
curl -s --retry 3 -L https://s3-us-west-2.amazonaws.com/pat.archive/streamsets-datacollector-jdbc-lib-3.1.0.0-SNAPSHOT.tgz | tar xz -C ${BUILD_DIR}/streamsets-datacollector-${SDC_VERSION} --strip-components 1

echo "-----> Downloading Postgres JDBC Driver"
mkdir -p ${BUILD_DIR}/streamsets-datacollector-${SDC_VERSION}/streamsets-libs-extras/streamsets-datacollector-jdbc-lib/lib
curl -s --retry 3 -L \
    -o ${BUILD_DIR}/streamsets-datacollector-${SDC_VERSION}/streamsets-libs-extras/streamsets-datacollector-jdbc-lib/lib/postgresql-42.1.4.jar \
	https://jdbc.postgresql.org/download/postgresql-42.1.4.jar

# Change the SDC port number
sed -i '/^http.port=/c\http.port=${env(PORT)}' ${BUILD_DIR}/streamsets-datacollector-${SDC_VERSION}/etc/sdc.properties

# Copy the startup script
mkdir ${BUILD_DIR}/scripts
cp ${BP_DIR}/scripts/* ${BUILD_DIR}/scripts
chmod +x ${BUILD_DIR}/scripts/*

exit 0;
